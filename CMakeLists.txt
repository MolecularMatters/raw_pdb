# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

# Regenerate CMakeLists.txt automatically in the root project
set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(raw_pdb
	LANGUAGES
		CXX
)

# Target raw_pdb
set(CMKR_TARGET raw_pdb)
set(raw_pdb_SOURCES "")

list(APPEND raw_pdb_SOURCES
	"src/PDB.cpp"
	"src/PDB_CoalescedMSFStream.cpp"
	"src/PDB_DBIStream.cpp"
	"src/PDB_DBITypes.cpp"
	"src/PDB_DirectMSFStream.cpp"
	"src/PDB_GlobalSymbolStream.cpp"
	"src/PDB_IPIStream.cpp"
	"src/PDB_ImageSectionStream.cpp"
	"src/PDB_InfoStream.cpp"
	"src/PDB_ModuleInfoStream.cpp"
	"src/PDB_ModuleSymbolStream.cpp"
	"src/PDB_PCH.cpp"
	"src/PDB_PublicSymbolStream.cpp"
	"src/PDB_RawFile.cpp"
	"src/PDB_SectionContributionStream.cpp"
	"src/PDB_SourceFileStream.cpp"
	"src/PDB_Types.cpp"
	"src/PDB_PCH.h"
	"include/raw_pdb/Foundation/PDB_ArrayView.h"
	"include/raw_pdb/Foundation/PDB_Assert.h"
	"include/raw_pdb/Foundation/PDB_BitOperators.h"
	"include/raw_pdb/Foundation/PDB_BitUtil.h"
	"include/raw_pdb/Foundation/PDB_DisableWarningsPop.h"
	"include/raw_pdb/Foundation/PDB_DisableWarningsPush.h"
	"include/raw_pdb/Foundation/PDB_Forward.h"
	"include/raw_pdb/Foundation/PDB_Log.h"
	"include/raw_pdb/Foundation/PDB_Macros.h"
	"include/raw_pdb/Foundation/PDB_Memory.h"
	"include/raw_pdb/Foundation/PDB_Move.h"
	"include/raw_pdb/Foundation/PDB_Platform.h"
	"include/raw_pdb/Foundation/PDB_PointerUtil.h"
	"include/raw_pdb/Foundation/PDB_Warnings.h"
	"include/raw_pdb/PDB.h"
	"include/raw_pdb/PDB_CoalescedMSFStream.h"
	"include/raw_pdb/PDB_DBIStream.h"
	"include/raw_pdb/PDB_DBITypes.h"
	"include/raw_pdb/PDB_DirectMSFStream.h"
	"include/raw_pdb/PDB_ErrorCodes.h"
	"include/raw_pdb/PDB_GlobalSymbolStream.h"
	"include/raw_pdb/PDB_IPIStream.h"
	"include/raw_pdb/PDB_IPITypes.h"
	"include/raw_pdb/PDB_ImageSectionStream.h"
	"include/raw_pdb/PDB_InfoStream.h"
	"include/raw_pdb/PDB_ModuleInfoStream.h"
	"include/raw_pdb/PDB_ModuleSymbolStream.h"
	"include/raw_pdb/PDB_PublicSymbolStream.h"
	"include/raw_pdb/PDB_RawFile.h"
	"include/raw_pdb/PDB_SectionContributionStream.h"
	"include/raw_pdb/PDB_SourceFileStream.h"
	"include/raw_pdb/PDB_Types.h"
	"include/raw_pdb/PDB_Util.h"
)

list(APPEND raw_pdb_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${raw_pdb_SOURCES})
add_library(raw_pdb STATIC)

if(raw_pdb_SOURCES)
	target_sources(raw_pdb PRIVATE ${raw_pdb_SOURCES})
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${raw_pdb_SOURCES})

add_library(raw_pdb::raw_pdb ALIAS raw_pdb)
target_include_directories(raw_pdb PUBLIC
	include
)

target_include_directories(raw_pdb PRIVATE
	src
	"include/raw_pdb"
)


set_target_properties(raw_pdb PROPERTIES
	CXX_STANDARD
		11
	CXX_STANDARD_REQUIRED
		ON
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

# Target examples
set(CMKR_TARGET examples)
set(examples_SOURCES "")

list(APPEND examples_SOURCES
	"examples/ExampleContributions.cpp"
	"examples/ExampleFunctionSymbols.cpp"
	"examples/ExampleMain.cpp"
	"examples/ExampleMemoryMappedFile.cpp"
	"examples/ExampleSymbols.cpp"
	"examples/ExampleTimedScope.cpp"
	"examples/Examples_PCH.cpp"
	"examples/ExampleMemoryMappedFile.h"
	"examples/ExampleTimedScope.h"
	"examples/Examples_PCH.h"
)

list(APPEND examples_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${examples_SOURCES})
add_executable(examples)

if(examples_SOURCES)
	target_sources(examples PRIVATE ${examples_SOURCES})
endif()

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT examples)
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${examples_SOURCES})

target_include_directories(examples PRIVATE
	examples
)

target_link_libraries(examples PRIVATE
	raw_pdb::raw_pdb
)

set_target_properties(examples PROPERTIES
	CXX_STANDARD
		11
	CXX_STANDARD_REQUIRED
		ON
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

